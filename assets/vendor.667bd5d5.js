function j(){}function M(t,e){for(const n in e)t[n]=e[n];return t}function A(t){return t()}function S(){return Object.create(null)}function d(t){t.forEach(A)}function q(t){return typeof t=="function"}function Q(t,e){return t!=t?e==e:t!==e||t&&typeof t=="object"||typeof t=="function"}function B(t){return Object.keys(t).length===0}function R(t,e,n,r){if(t){const o=C(t,e,n,r);return t[0](o)}}function C(t,e,n,r){return t[1]&&r?M(n.ctx.slice(),t[1](r(e))):n.ctx}function V(t,e,n,r){if(t[2]&&r){const o=t[2](r(n));if(e.dirty===void 0)return o;if(typeof o=="object"){const f=[],u=Math.max(e.dirty.length,o.length);for(let c=0;c<u;c+=1)f[c]=e.dirty[c]|o[c];return f}return e.dirty|o}return e.dirty}function W(t,e,n,r,o,f){if(o){const u=C(e,n,r,f);t.p(u,o)}}function X(t){if(t.ctx.length>32){const e=[],n=t.ctx.length/32;for(let r=0;r<n;r++)e[r]=-1;return e}return-1}function Y(t,e){t.appendChild(e)}function Z(t,e,n){t.insertBefore(e,n||null)}function F(t){t.parentNode.removeChild(t)}function tt(t,e){for(let n=0;n<t.length;n+=1)t[n]&&t[n].d(e)}function et(t){return document.createElement(t)}function L(t){return document.createTextNode(t)}function nt(){return L(" ")}function rt(){return L("")}function ot(t,e,n,r){return t.addEventListener(e,n,r),()=>t.removeEventListener(e,n,r)}function st(t,e,n){n==null?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}function P(t){return Array.from(t.childNodes)}function ut(t,e,n){t.classList[n?"add":"remove"](e)}let h;function g(t){h=t}function T(){if(!h)throw new Error("Function called outside component initialization");return h}function ct(t){T().$$.after_update.push(t)}const _=[],N=[],m=[],O=[],U=Promise.resolve();let y=!1;function D(){y||(y=!0,U.then(z))}function x(t){m.push(t)}let b=!1;const $=new Set;function z(){if(!b){b=!0;do{for(let t=0;t<_.length;t+=1){const e=_[t];g(e),G(e.$$)}for(g(null),_.length=0;N.length;)N.pop()();for(let t=0;t<m.length;t+=1){const e=m[t];$.has(e)||($.add(e),e())}m.length=0}while(_.length);for(;O.length;)O.pop()();y=!1,b=!1,$.clear()}}function G(t){if(t.fragment!==null){t.update(),d(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(x)}}const p=new Set;let l;function ft(){l={r:0,c:[],p:l}}function it(){l.r||d(l.c),l=l.p}function H(t,e){t&&t.i&&(p.delete(t),t.i(e))}function at(t,e,n,r){if(t&&t.o){if(p.has(t))return;p.add(t),l.c.push(()=>{p.delete(t),r&&(n&&t.d(1),r())}),t.o(e)}}function lt(t){t&&t.c()}function I(t,e,n,r){const{fragment:o,on_mount:f,on_destroy:u,after_update:c}=t.$$;o&&o.m(e,n),r||x(()=>{const a=f.map(A).filter(q);u?u.push(...a):d(a),t.$$.on_mount=[]}),c.forEach(x)}function J(t,e){const n=t.$$;n.fragment!==null&&(d(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}function K(t,e){t.$$.dirty[0]===-1&&(_.push(t),D(),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function dt(t,e,n,r,o,f,u,c=[-1]){const a=h;g(t);const s=t.$$={fragment:null,ctx:null,props:f,update:j,not_equal:o,bound:S(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(a?a.$$.context:[])),callbacks:S(),dirty:c,skip_bound:!1,root:e.target||a.$$.root};u&&u(s.root);let w=!1;if(s.ctx=n?n(t,e.props||{},(i,E,...k)=>{const v=k.length?k[0]:E;return s.ctx&&o(s.ctx[i],s.ctx[i]=v)&&(!s.skip_bound&&s.bound[i]&&s.bound[i](v),w&&K(t,i)),E}):[],s.update(),w=!0,d(s.before_update),s.fragment=r?r(s.ctx):!1,e.target){if(e.hydrate){const i=P(e.target);s.fragment&&s.fragment.l(i),i.forEach(F)}else s.fragment&&s.fragment.c();e.intro&&H(t.$$.fragment),I(t,e.target,e.anchor,e.customElement),z()}g(a)}class _t{$destroy(){J(this,1),this.$destroy=j}$on(e,n){const r=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return r.push(n),()=>{const o=r.indexOf(n);o!==-1&&r.splice(o,1)}}$set(e){this.$$set&&!B(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}export{tt as A,_t as S,nt as a,st as b,Z as c,F as d,et as e,N as f,R as g,lt as h,dt as i,Y as j,X as k,V as l,I as m,j as n,at as o,J as p,ct as q,L as r,Q as s,H as t,W as u,rt as v,ft as w,it as x,ut as y,ot as z};
